@font-face {
  font-family: 'BianZhiDai';
  src: url('../fonts/bianzhidai-Bubble.otf') format('opentype');
}

:root {
  --primary: #000000;
  --secondary: #1a1a1a;
  --accent: #ff0066;
  --accent2: #00ffcc;
  --text: #ffffff;
  --grid-angle: 45deg;
  --noise-opacity: 0.03;
  --glitch-intensity: 8px;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased;
}

html, body {
  height: 100%;
  margin: 0;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  font-family: 'Inter', sans-serif;
  background-color: var(--primary);
  color: var(--text);
  line-height: 1.6;
  overflow-x: hidden;
  position: relative;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    repeating-linear-gradient(
      var(--grid-angle),
      rgba(255, 255, 255, var(--noise-opacity)) 0px,
      rgba(255, 255, 255, var(--noise-opacity)) 1px,
      transparent 1px,
      transparent 20px
    ),
    repeating-linear-gradient(
      calc(var(--grid-angle) + 90deg),
      rgba(255, 255, 255, var(--noise-opacity)) 0px,
      rgba(255, 255, 255, var(--noise-opacity)) 1px,
      transparent 1px,
      transparent 20px
    );
  z-index: -1;
}

/* Noise overlay effect */
body::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.02;
  pointer-events: none;
  z-index: 100;
}

.content {
  flex: 1 0 auto;
  position: relative;
  padding: 0 1rem;
  max-width: 1400px;
  margin: 0 auto;
  width: 100%;
}

header {
  padding: 4rem 0;
  position: relative;
}

header::before {
  content: '';
  position: absolute;
  top: 0;
  left: -50%;
  width: 200%;
  height: 100%;
  background: linear-gradient(90deg, transparent 0%, var(--accent) 50%, transparent 100%);
  opacity: 0.1;
  transform: skewY(-5deg);
  z-index: -1;
}

.diagonal-box {
  position: absolute;
  top: 0;
  right: 0;
  width: 40%;
  height: 100%;
  background-color: var(--accent);
  clip-path: polygon(100% 0, 0 0, 100% 100%);
  opacity: 0.03;
  z-index: -1;
}

.angular-element {
  position: absolute;
  background-color: var(--accent2);
  z-index: -1;
}

.angular-element-1 {
  top: 20%;
  left: 10%;
  width: 100px;
  height: 10px;
  transform: rotate(var(--grid-angle));
}

.angular-element-2 {
  bottom: 30%;
  right: 20%;
  width: 150px;
  height: 15px;
  transform: rotate(calc(var(--grid-angle) * -1));
}

h1 {
  font-size: 6rem;
  color: var(--accent);
  font-family: 'BianZhiDai', sans-serif;
  text-transform: uppercase;
  letter-spacing: -0.03em;
  line-height: 0.9;
  margin-bottom: 1rem;
  position: relative;
  font-weight: 800;
  mix-blend-mode: difference;
  transform: perspective(500px) rotateX(5deg);
  animation: titleGlitch 3s infinite alternate;
}

/* Chromatic aberration glitch effect */
h1::before,
h1::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
  mix-blend-mode: screen;
  pointer-events: none;
}

h1::before {
  color: #ff00de;
  left: calc(var(--glitch-intensity) * -0.5);
  animation: glitchLeft 4s infinite alternate;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
}

h1::after {
  color: #00ffff;
  left: calc(var(--glitch-intensity) * 0.5);
  animation: glitchRight 4s infinite alternate;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
}

h2 {
  font-weight: 300;
  color: var(--text);
  text-transform: uppercase;
  letter-spacing: 0.3em;
  font-size: 0.8rem;
  opacity: 0.7;
  margin-left: 5px;
  position: relative;
  display: inline-block;
}

h2::before {
  content: '[';
  position: absolute;
  left: -15px;
}

h2::after {
  content: ']';
  position: absolute;
  right: -15px;
}

.section {
  padding: 4rem 0;
  position: relative;
}

.section::before {
  content: '';
  position: absolute;
  left: -30px;
  top: 0;
}

.project-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.project {
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: var(--secondary);
  padding: 2rem;
  transition: all 0.3s ease;
  overflow: hidden;
}

.project::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: var(--accent);
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 0.3s ease;
}

.project:hover::before {
  transform: scaleX(1);
}

.project::after {
  content: '';
  position: absolute;
  bottom: 20px;
  right: 20px;
  width: 30px;
  height: 30px;
  background: linear-gradient(var(--grid-angle), var(--accent) 50%, transparent 50%);
  opacity: 0.3;
}

.project-number {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 0.7rem;
  color: var(--accent);
  opacity: 0.5;
  font-family: monospace;
}

.project-title {
  font-size: 1.2rem;
  color: var(--accent2);
  position: relative;
  margin-bottom: 1rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  display: inline-block;
}

.project-description {
  color: var(--text);
  opacity: 0.7;
  font-size: 0.9rem;
  position: relative;
}

footer {
  flex-shrink: 0;
  padding: 2rem;
  text-align: center;
  font-size: 0.7rem;
  color: var(--text);
  opacity: 0.6;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  position: relative;
}

footer::before {
  content: '';
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 1px;
  background: var(--accent);
}

footer a {
  color: var(--accent);
  text-decoration: none;
  position: relative;
  transition: all 0.3s ease;
  margin: 0 1rem;
}

footer a::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 100%;
  height: 1px;
  background: var(--accent);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

footer a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

@media (max-width: 768px) {
  h1 {
    font-size: 4rem;
  }
  
  .project-container {
    grid-template-columns: 1fr;
  }
}

/* Utility classes */
.text-glitch {
  position: relative;
  animation: textShift 3s infinite alternate;
}

/* Glitch elements and scan lines */
.glitch-scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.02) 50%
  );
  background-size: 100% 4px;
  z-index: 999;
  pointer-events: none;
  opacity: 0.15;
}

/* Animations */
@keyframes titleGlitch {
  0% {
    text-shadow: -2px 2px 0 rgba(255, 0, 222, 0.6), 2px -2px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1);
  }
  25% {
    text-shadow: -2px -2px 0 rgba(255, 0, 222, 0.6), 2px 2px 0 rgba(0, 255, 255, 0.6);
  }
  50% {
    text-shadow: 2px -2px 0 rgba(255, 0, 222, 0.6), -2px 2px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1.01);
  }
  75% {
    text-shadow: 2px 2px 0 rgba(255, 0, 222, 0.6), -2px -2px 0 rgba(0, 255, 255, 0.6);
  }
  100% {
    text-shadow: -2px 2px 0 rgba(255, 0, 222, 0.6), 2px -2px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1);
  }
}

@keyframes glitchLeft {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(-2px);
  }
  90% {
    transform: translateX(4px);
  }
  95% {
    transform: translateX(-2px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes glitchRight {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-4px);
  }
  95% {
    transform: translateX(2px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes textShift {
  0% {
    transform: translateX(0);
  }
  10% {
    transform: translateX(-2px);
  }
  20% {
    transform: translateX(2px);
  }
  30% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(0);
  }
} 