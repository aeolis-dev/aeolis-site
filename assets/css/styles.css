/* ==========================================================================
   1. FONT IMPORTS & GLOBAL VARIABLES
   ========================================================================== */

@import url('https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap');

/* Global variables for consistent theming */
:root {
  --primary: #000000;
  --secondary: #1a1a1a;
  --accent: #ff0066; 
  --accent2: #00ffcc;
  --text: #ffffff;
  --grid-angle: 45deg;  /* Angle for diagonal grid patterns */
  --noise-opacity: 0.03;
  --glitch-offset-strength: 8px;  /* Controls the magnitude of glitch offset effects */
}

/* ==========================================================================
   2. RESETS & BASE STYLES
   ========================================================================== */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased; /* Improves text rendering on some displays */
}

html, body {
  height: 100%;
  margin: 0;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  font-family: 'Inter', sans-serif;
  background-color: var(--primary);
  color: var(--text);
  line-height: 1.6;
  overflow-x: hidden; /* Prevents horizontal scrolling */
  position: relative; /* For positioning pseudo-elements like overlays */
}

/* ==========================================================================
   3. LAYOUT & PAGE STRUCTURE
   ========================================================================== */

/* Main content wrapper */
.content {
  flex: 1 0 auto; /* Allows footer to stick to bottom */
  position: relative;
  padding: 0 1rem;
  max-width: 1400px;
  margin: 0 auto; /* Centers content on larger screens */
  width: 100%;
}

header {
  padding: 2rem 0;
  position: relative;
}

footer {
  flex-shrink: 0; /* Prevents footer from shrinking if content is too tall */
  padding: 2rem;
  text-align: center;
  font-size: 0.7rem;
  color: var(--text);
  opacity: 1; /* Fully opaque */
  letter-spacing: 0.2em;
  text-transform: uppercase;
  border-top: 1px solid rgba(91, 10, 10, 0.294); /* Subtle top border */
  position: relative;
  background: linear-gradient(
    180deg,
    var(--secondary) 0%,
    var(--primary) 100%
  );
  transform: translateZ(0); /* Promotes to its own compositing layer for performance */
  box-shadow: 0 -10px 30px rgba(0, 0, 0, 0.3); /* Shadow above the footer */
  z-index: 2; /* Ensures footer is above background elements */
}

footer div.local-glitch-text[data-text] {
  position: relative; 
  display: block;
  margin-top: 0.5em;
  width: 100%;
  text-align: center;
}

/* Project grid layout */
.project-container {
  display: grid;
  grid-template-columns: repeat(2, minmax(150px, 300px));
  gap: 2rem;
  perspective: 1000px; /* TODO: Mess around with this. Adds 3D perspective to child elements. */
}

/* ==========================================================================
   4. TYPOGRAPHY
   ========================================================================== */

/* Main title styling (h1) */
h1 {
  font-size: 6rem;
  color: var(--accent);
  font-family: 'Space Mono', monospace;
  text-transform: uppercase;
  letter-spacing: -0.03em; /* Tightens spacing */
  line-height: 0.9;
  margin-bottom: 1rem;
  position: relative;
  font-weight: 700;
  mix-blend-mode: difference; /* Inverts colors where it overlaps elements behind it */
  transform: perspective(500px) rotateX(5deg); /* Slight 3D tilt */
  animation-name: titleGlitch;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  /* animation-duration is set by JavaScript for variability */
}

/* Subtitle styling (h2) */
h2 {
  font-weight: 300;
  color: var(--text);
  text-transform: uppercase;
  letter-spacing: 0.3em; /* Wider spacing */
  font-size: 0.8rem;
  opacity: 0.7;
  margin-left: 5px;
  position: relative;
  display: inline-block; /* Allows padding and keeps it inline */
  padding-left: 15px;
  padding-right: 15px;
}

/* Span inside h2 for local glitch text */
h2 span.local-glitch-text {
  display: inline-block; /* Necessary for transform and some layout properties if used */
  position: relative;
}

/* Style for the link inside h2 */
h2 a {
  color: var(--accent2); /* Set link color to accent2 */
  text-decoration: none; /* Remove underline */
}

/* ==========================================================================
   5. COMPONENT STYLES (Projects, Cards, etc.)
   ========================================================================== */

/* Individual project card styling */
.project {
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: linear-gradient(
    145deg,
    rgba(26, 26, 26, 0.6) 0%, /* Make background partially transparent */
    rgba(26, 26, 26, 0.3) 100%
  );
  padding: 2rem;
  transition: all 0.3s ease; /* Smooth transition for hover effects */
  overflow: hidden; /* Clips content like the hover bar animation */
  transform: translateZ(0) rotateX(2deg); /* Slight 3D tilt */
  transform-style: preserve-3d; /* Children also respect 3D transformations */
  box-shadow: 
    0 15px 25px rgba(0, 0, 0, 0.4), /* Main shadow for depth */
    0 0 20px rgba(255, 0, 102, 0.1); /* Subtle accent glow */
  display: flex;
  flex-direction: column; /* Stacks title and description vertically */
  height: 200px; /* Fixed height. Was min-height. */
  backdrop-filter: blur(10px); /* Add blur effect to content behind the element */
  -webkit-backdrop-filter: blur(10px); /* Safari support */
}

.project:hover {
  box-shadow: 
    0 20px 35px rgba(0, 0, 0, 0.5), /* Enhanced shadow on hover */
    0 0 30px rgba(255, 0, 102, 0.2), /* Brighter accent glow */
    inset 0 0 30px rgba(255, 0, 102, 0.1); /* Inner accent glow */
  border-color: rgba(255, 0, 102, 0.3); /* Accent-colored border on hover */
}

.project-title {
  font-size: 1.2rem;
  color: var(--accent2); /* Base color (cyan) */
  position: relative;
  margin-bottom: 1rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  display: inline-block; /* To contain text-shadow and allow transform */
  text-shadow: 0 0 10px rgba(0, 255, 204, 0.3); /* Subtle glow matching accent2 */
  transform: translateZ(10px); /* Lifts title slightly in 3D space */
  transition: color 0.3s ease-out; /* Smooth color transition, e.g., for hover bar text color change */
}

.project-number {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 0.7rem;
  color: var(--accent);
  opacity: 0.7;
  font-family: monospace;
  text-shadow: 0 0 8px rgba(255, 0, 102, 0.4); /* Accent glow */
  transform: translateZ(5px); /* Lifts number slightly in 3D space */
  animation: none !important; /* Ensure no other animations interfere. Check if !important is truly necessary. */
}

.project-description {
  color: var(--text);
  opacity: 0.8;
  font-size: 0.9rem;
  position: relative;
  transform: translateZ(5px); /* Lifts description slightly in 3D space */
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Subtle drop shadow for readability */
  margin-top: 1rem; /* Spacing below title. Was 'auto'. */
}

/* ==========================================================================
   6. DECORATIVE EFFECTS & OVERLAYS
   ========================================================================== */

/* Diagonal grid background effect for body */
body::before {
  content: '';
  position: fixed; /* Fixed to viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    repeating-linear-gradient( /* First set of diagonal lines */
      var(--grid-angle),
      rgba(255, 255, 255, var(--noise-opacity)) 0px,
      rgba(255, 255, 255, var(--noise-opacity)) 1px, /* Thin 1px line */
      transparent 1px,
      transparent 20px /* Space between lines */
    ),
    repeating-linear-gradient( /* Second set of lines, perpendicular to first */
      calc(var(--grid-angle) + 90deg),
      rgba(255, 255, 255, var(--noise-opacity)) 0px,
      rgba(255, 255, 255, var(--noise-opacity)) 1px,
      transparent 1px,
      transparent 20px
    );
  z-index: -1; /* Places grid behind all content */
}

/* CRT screen noise effect overlay for body */
/* TODO: Try other effects, but I like this one */
body::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.02;
  pointer-events: none;
  z-index: 100; /* High z-index to be on top of most things */
}

/* Diagonal gradient behind header */
header::before {
  content: '';
  position: absolute;
  top: 0;
  left: -50%;
  width: 200%;
  height: 100%;
  background: linear-gradient(90deg, transparent 0%, var(--accent) 50%, transparent 100%);
  opacity: 0.1;
  transform: skewY(-5deg);
  z-index: -1;
}

/* Decorative angular elements */
.diagonal-box {
  position: absolute;
  top: 0;
  right: 0;
  width: 40%;
  height: 100%;
  background-color: var(--accent);
  clip-path: polygon(100% 0, 0 0, 100% 100%);
  opacity: 0.03;
  z-index: -1;
}

.angular-element {
  position: absolute;
  background-color: var(--accent2);
  z-index: -1;
}

.angular-element-1 {
  top: 20%;
  left: 10%;
  width: 100px;
  height: 10px;
  transform: rotate(var(--grid-angle));
}

.angular-element-2 {
  bottom: 30%;
  right: 20%;
  width: 150px;
  height: 15px;
  transform: rotate(calc(var(--grid-angle) * -1));
}

/* Decorative brackets for h2 subtitle */
h2::before {
  content: '[';
  position: absolute;
  left: 0;
  top: 0;
}

h2::after {
  content: ']';
  position: absolute;
  right: 0;
  top: 0;
}

/* Animated highlight bar for project cards on hover */
/* TODO: Not fond of the scrolling animation, try other things */
.project::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: var(--accent);
  opacity: 0;
  transform: scaleX(1); /* Keep it scaled, but fade it in */
  transform-origin: left;
  transition: opacity 0.3s ease; /* Check between opacity and transform, maybe try other options */
  box-shadow: 0 0 15px rgba(255, 0, 102, 0.4);
}

.project:hover::before {
  opacity: 1; /* Fade in on hover */
}

/* Decorative line above footer */
footer::before {
  content: '';
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--accent),
    transparent
  );
  box-shadow: 0 0 15px var(--accent);
}

/* CRT scanlines effect */
.glitch-scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.25) 50%
  );
  background-size: 100% 3px;
  z-index: 999; /* Below body::after noise, but above most content, check if this is correct? */
  pointer-events: none;
  opacity: 0.5;
  animation: scanAnimation 0.07s infinite;
  mix-blend-mode: overlay;
}

/* Chromatic aberration for h1 title */
/* TODO: Change the title, font, etc. */
h1::before,
h1::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  mix-blend-mode: screen;
  pointer-events: none;
}

h1::before { /* Red/pink offset layer */
  color: #ff00de;
  left: -1px;
  opacity: 0.6;
  animation: glitchLeft 8.3s infinite;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
}

h1::after { /* Blue/cyan offset layer */
  color: #00ffff;
  left: 1px;
  opacity: 0.5;
  animation: glitchRight 8.3s infinite;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
  z-index: 1;
}

/* ==========================================================================
   7. LOCALIZED GLITCH AURA EFFECT (JavaScript controlled)
   ========================================================================== */

/* Base for elements with local glitch aura */
.local-glitch-text {
  position: relative; 
  --mask-size: 75px; /* Diameter of the aura */
}

/* The ::before pseudo-element creates the masked glitch text */
/* TODO: See how much is possible without JS */
.local-glitch-text::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; 
  color: transparent; /* Original text of pseudo-element is transparent */
  text-shadow: /* Glitch colors appear via text-shadow */
    -1px -1px 0 var(--accent), /* Pink */
    1px 1px 0 var(--accent2);  /* Cyan */
  mask-image: radial-gradient(circle calc(var(--mask-size) / 2) at var(--mask-x, -9999px) var(--mask-y, -9999px), black 100%, transparent 101%);
  mask-repeat: no-repeat;
  animation-play-state: paused; /* Controlled by JS */
  animation-name: textGlitch, sharpGlitch; 
  animation-duration: 0.2s, 1.2s; 
  animation-timing-function: ease-in-out, steps(1); 
  animation-delay: 0s, 0.05s; 
  animation-iteration-count: infinite, infinite;
  animation-direction: alternate, normal;
}

.local-glitch-text.glitch-active::before {
  animation-play-state: running; 
}

/* Ensure original text content is layered correctly if needed, though ::before is transparent */
.local-glitch-text > *:not(::before) {
  position: relative;
  z-index: 1; /* May not be strictly necessary with transparent ::before */
}

/* Base styling for elements that will have the .local-glitch-text class */
/* Ensures position:relative for the ::before pseudo-element placement and consistent layout. */
/* TODO: Check if this is all necessary */
.project-title, /* Already has .local-glitch-text if used */
.project-description,
footer a, /* Already has .local-glitch-text if used */
h2 { /* h2 itself, not the span, for base display properties */
  position: relative; 
  display: inline-block; 
}


/* ==========================================================================
   8. LINK & INTERACTIVE ELEMENT STYLES (Glitch Bar Fill Hover)
   ========================================================================== */

/* Footer links base style - before Glitch Bar Fill effect */
footer a,
footer span.local-glitch-text { /* This selector is less specific than a.local-glitch-text, applies general footer link styling */
  color: var(--accent);
  text-decoration: none;
  margin: 0 1rem;
  text-shadow: 0 0 8px rgba(255, 0, 102, 0.4);
}

/* --- GENERALIZED Glitch Bar Fill Hover Effect --- */
/* Applied to actual <a> tags with .local-glitch-text and .project-title elements */

/* Base style for elements getting the glitch bar fill hover */
a.local-glitch-text,
.project-title.local-glitch-text { /* .project-title already has .local-glitch-text by default */
  position: relative; /* Ensures proper positioning for ::after */
  transition: color 0.2s 0.1s ease-out; /* Delay text color change slightly */
  text-decoration: none; /* Ensure no default underline */
  cursor: pointer; /* Indicate interactivity */
}

/* The background bar pseudo-element */
/* TODO: Not super fond of the styling/animation, try other things */
a.local-glitch-text::after,
.project-title.local-glitch-text::after {
  content: '';
  position: absolute;
  top: -0.1em; 
  left: -0.3em;
  width: calc(100% + 0.6em); 
  height: calc(100% + 0.2em); 
  background-color: var(--accent); /* Changed from accent2 to accent, try other colours too */
  background-image: linear-gradient(
    45deg, 
    rgba(0,0,0,0.05) 25%, 
    transparent 25%, 
    transparent 50%, 
    rgba(0,0,0,0.05) 50%, 
    rgba(0,0,0,0.05) 75%, 
    transparent 75%, 
    transparent
  );
  background-size: 6px 6px; /* Small repeating pattern for texture */
  z-index: -1; /* Place bar behind the text */
  opacity: 0;
  transform: scaleX(0);
  transform-origin: left; 
  transition: transform 0.35s cubic-bezier(0.23, 1, 0.32, 1), opacity 0.2s ease-out;
  border-radius: 2px; /* Slight radius for aesthetics */
  pointer-events: none; /* Ensure the pseudo-element doesn't intercept mouse events */
}

/* Hover state for the main element - text color change */
a.local-glitch-text:hover,
.project-title.local-glitch-text:hover {
   color: var(--primary) !important; /* Make text dark (black) to contrast with cyan bar */
}

/* Hover state for the background bar pseudo-element - bar animation */
/* TODO: Try animated effects?? */
a.local-glitch-text:hover::after,
.project-title.local-glitch-text:hover::after {
  opacity: 1; /* Show background bar */
  transform: scaleX(1);
}

/* ==========================================================================
   9. ANIMATIONS (Keyframes)
   ========================================================================== */

/* For main title's chromatic aberration layers */
@keyframes glitchLeft {
  0% { transform: translate(0, 0); }
  93.7% { transform: translate(0, 0); }
  93.8% { transform: translate(-15px, 2px); }
  93.9% { transform: translate(4px, -2px); }
  94.0% { transform: translate(0, 0); }
  94.9% { transform: translate(0, 0); }
  95.0% { transform: translate(3px, -1px); }
  95.1% { transform: translate(-4px, 2px); }
  95.2% { transform: translate(0, 0); }
  99.7% { transform: translate(0, 0); }
  99.8% { transform: translate(-3px, -2px); }
  99.9% { transform: translate(2px, 1px); }
  100% { transform: translate(0, 0); }
}

@keyframes glitchRight {
  0% { transform: translate(0, 0); }
  93.7% { transform: translate(0, 0); }
  93.8% { transform: translate(5px, -2px); }
  93.9% { transform: translate(-4px, 2px); }
  94.0% { transform: translate(0, 0); }
  94.9% { transform: translate(0, 0); }
  95.0% { transform: translate(-3px, 1px); }
  95.1% { transform: translate(4px, -2px); }
  95.2% { transform: translate(0, 0); }
  99.7% { transform: translate(0, 0); }
  99.8% { transform: translate(3px, 2px); }
  99.9% { transform: translate(-8px, -10px); }
  100% { transform: translate(0, 0); }
}

/* For main title's primary glitch text-shadow and scale */
@keyframes titleGlitch {
  0% {
    text-shadow: -1px 1px 0 rgba(255, 0, 222, 0.6), 1px -1px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1);
  }
  25% {
    text-shadow: 1px -1px 0 rgba(255, 0, 222, 0.6), 1px -1px 0 rgba(0, 255, 255, 0.6);
  }
  50% {
    text-shadow: 1px -1px 0 rgba(255, 0, 222, 0.6), -1px 1px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1.01);
  }
  75% {
    text-shadow:  1px -1px 0 rgba(255, 0, 222, 0.6), -1px -0px 0 rgba(0, 255, 255, 0.6);
  }
  100% {
    text-shadow: -1px 1px 0 rgba(255, 0, 222, 0.6), 1px -1px 0 rgba(0, 255, 255, 0.6);
    transform: perspective(500px) rotateX(5deg) scale(1);
  }
}

/* For local glitch aura effect */
@keyframes textGlitch {
  0% {
    transform: translate(0);
    text-shadow: 
      -1px -1px 0 var(--accent),
      1px 1px 0 var(--accent2);
  }
  20% {
    transform: translate(-2px, 1px);
    text-shadow: 
      1px -1px 0 var(--accent),
      -1px 1px 0 var(--accent2);
  }
  40% {
    transform: translate(2px, -1px);
    text-shadow: 
      2px 1px 0 var(--accent),
      -1px -1px 0 var(--accent2);
  }
  60% {
    transform: translate(-1px, 2px);
    text-shadow: 
      -1px 1px 0 var(--accent),
      1px -1px 0 var(--accent2);
  }
  80% {
    transform: translate(1px, -2px);
    text-shadow: 
      1px 1px 0 var(--accent),
      -1px -1px 0 var(--accent2);
  }
  100% {
    transform: translate(0);
    text-shadow: 
      -1px -1px 0 var(--accent),
      1px 1px 0 var(--accent2);
  }
}

@keyframes sharpGlitch { /* Also for local glitch aura */
  0%, 100% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
  5% { transform: translate(2px, -1px); clip-path: inset(10% 0 85% 0); }
  6% { transform: translate(-2px, 1px); clip-path: inset(90% 0 5% 0); }
  10% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
  20% { transform: translate(-3px, 2px); clip-path: inset(0 80% 70% 0); }
  21% { transform: translate(3px, -2px); clip-path: inset(60% 10% 0 0); }
  25% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
  40% { transform: translate(1px, 3px); clip-path: inset(50% 0 0 40%); }
  41% { transform: translate(-1px, -3px); clip-path: inset(0 30% 40% 0); }
  45% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
  60% { transform: translate(4px, -2px); clip-path: inset(20% 50% 50% 0); }
  61% { transform: translate(-4px, 2px); clip-path: inset(55% 0 25% 50%); }
  65% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
  80% { transform: translate(-2px, -3px); clip-path: inset(0 0 70% 60%); }
  81% { transform: translate(2px, 3px); clip-path: inset(75% 65% 0 0); }
  85% { transform: translate(0, 0); clip-path: inset(0 0 0 0); }
}

/* For scanlines subtle vibration */
@keyframes scanAnimation {
  0% { transform: translateY(0); }
  50% { transform: translateY(1px); }
  100% { transform: translateY(0); }
}

/* ==========================================================================
   10. RESPONSIVE DESIGN
   ========================================================================== */

/* TODO: Test mobile etc. */
@media (max-width: 768px) {
  h1 {
    font-size: 4rem;
  }
  
  .project-container {
    grid-template-columns: 1fr;
  }

  /* Adjust subtitle padding for smaller screens if needed */
  h2 {
    letter-spacing: 0.2em;
    font-size: 0.7rem;
  }
}

@media (max-width: 480px) {
  h1 {
    font-size: 3rem;
  }
  
  header {
    padding: 3rem 0;
  }

  .project {
    padding: 1.5rem;
  }

  .project-title {
    font-size: 1rem;
  }

  .project-description {
    font-size: 0.8rem;
  }

  footer {
    padding: 1.5rem;
    font-size: 0.6rem;
  }
} 